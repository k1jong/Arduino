// Phi_Publish_DHT11.ino
#include <ESP8266WiFi.h>
#include <PubSubClient.h>

// ----- DHT11 ------------------------
#include "DHT.h"
#define DHTPIN D4
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);
// -------------------------------------

#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

const char* ssid = "RiatechB2G";
const char* password = "12345678";

const char* userId = "mqtt_phirippa";
const char* userPw = "1234";
const char* clientId = userId;
char* topic_t = "Sensors/MyOffice/Indoor/Temp";
char* topic_h = "Sensors/MyOffice/Indoor/Humi";
char* server = "192.168.2.34";

WiFiClient wifiClient;
PubSubClient client(server, 1883, wifiClient);

void setup() {
  Serial.begin(9600);

  Serial.print("\nConnecting to ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(1000);
  }
  Serial.println("\nWiFi Connected");

  Serial.println("Connecting to broker");
  while (!client.connect(clientId, userId, userPw)) {
    Serial.print("*");
    delay(1000);
  }
  Serial.println("\nConnected to broker");
  dht.begin();

  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("OLED(SSD1306) allocation failed"));
    while (1) {}
  }
  display.clearDisplay();
}


void loop() {
  display.clearDisplay();
  display.setCursor(0, 0);
  char buf[20];
  float h = dht.readHumidity();
  float t = dht.readTemperature();
  if (isnan(h) || isnan(t)) {
    Serial.println("Failed to read from DHT sensor!");
    return;
  }

  display.setTextColor(WHITE);

  String str = String(h);
  str.toCharArray(buf, str.length());
  client.publish(topic_h, buf);
  Serial.println(String(topic_h) + " : " + buf);
  display.println(String(topic_h) + " : " + buf);

  str = String(t);
  str.toCharArray(buf, str.length());
  client.publish(topic_t, buf);
  Serial.println(String(topic_t) + " : " + buf);
  display.println(String(topic_t) + " : " + buf);
  display.display();
  delay(2000);
}
