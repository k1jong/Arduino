#include <ESP8266WiFi.h>
#include <PubSubClient.h>

const char* ssid = "RiatechB2G";
const char* password = "12345678";

const char* clientId = "mqtt_riatech";
const char* userId = clientId;
const char* userPw = "1234";
char* topic = "Sensors/MyOffice/Indoor/#";
char* server = "192.168.2.34";
char messageBuf[100];

void callback(char* topic, byte* payload, unsigned int length) {
  Serial.println("Message arrived!\nTtopic: " + String(topic));
  Serial.println("Length: " + String(length, DEC));

  strncpy(messageBuf, (char*)payload, length);
  messageBuf[length] = '\0';
  Serial.println("Payload: " + String(messageBuf) + "\n\n");
}

WiFiClient wifiClient;
PubSubClient client(server, 1883, callback, wifiClient);

void setup() {
  Serial.begin(9600);
  Serial.print("\nConnecting to ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(500);
  }
  Serial.println("\nWiFi Connected");

  while (!client.connect(clientId, userId, userPw)) {
    Serial.print("*");
    delay(1000);
  }
  Serial.println("\nConnected to broker");
  Serial.println(String("Subscribing! topic = ") + topic);
  client.subscribe(topic);
}

void loop() {
  client.loop();
}

#  $mosquitto_pub –t Sensors/MyOffice/Indoor/Temp –m 33.21 –u mqtt_tester –P 1234 mosquitto_pub –t Sensors/MyOffice/Indoor/Temp –m 33.21 –u mqtt_tester –P 1234
# 이 코드는 mosquitto_pub이라는 MQTT 클라이언트 유틸리티를 사용하여 Sensors/MyOffice/Indoor/Temp라는 토픽에 33.21이라는 메시지를 발행하는 코드입니다. MQTT는 메시지 지향 미들웨어로, 토픽을 기반으로 메시지를 주고받는 프로토콜입니다. mosquitto_pub은 Mosquitto 패키지에 포함된 간단한 MQTT 클라이언트로, 테스트나 문제 해결에 유용합니다1.

# 이 코드에서 사용된 옵션들은 다음과 같습니다:

# -t: 토픽을 지정합니다. 이 경우에는 Sensors/MyOffice/Indoor/Temp입니다.
# -m: 메시지를 지정합니다. 이 경우에는 33.21입니다.
# -u: 사용자 이름을 지정합니다. 이 경우에는 mqtt_tester입니다.
# -P: 비밀번호를 지정합니다. 이 경우에는 1234입니다.
# 이 코드를 실행하면, 브로커에 연결하고, 토픽과 메시지를 발행하고, 연결을 끊습니다. 브로커는 MQTT 서버로, 클라이언트들의 메시지를 중개합니다. 브로커의 주소나 포트 번호를 지정하지 않으면, 기본적으로 localhost와 1883을 사용합니다.
